#!/bin/bash

# Initial flag string
flag="SIS_CTF{"$(printf 'a%.0s' {1..27})"}"
LETTERS="abcdefghijklmnopqrstuvwxyzABCDEFGHIKLMNOPQRSTVWXYZ0123456789_"

# Loop through each position in the range 8 to 34 (inclusive)
for i in $(seq 8 34); do
    min_diff="inf"
    best_l=""

    # Loop through each allowed character
    for l in $(echo "$LETTERS" | grep -o .); do
        # Replace the character at the current position
        flag="${flag:0:$i}$l${flag:$((i+1))}"

        # Run the command and capture its output
        output=$(./flag_debug "$flag" 2>/dev/null)

        # Check if the flag is correct
        if [[ "$output" == "Congratulations, you found the flag!" ]]; then
            echo "$flag"
            exit 0
        fi

        # Extract the diff value from the output
        diff_value=$(echo "$output" | awk '{print $NF}')

        # Validate diff_value as an integer, else set to infinity
        if ! [[ "$diff_value" =~ ^[0-9]+$ ]]; then
            diff_value="inf"
        fi

        # Update min_diff and best_l if a smaller diff_value is found
        if [[ "$min_diff" == "inf" || "$diff_value" -lt "$min_diff" ]]; then
            min_diff="$diff_value"
            best_l="$l"
        fi
    done

    # Update the flag with the best character for the current position
    flag="${flag:0:$i}$best_l${flag:$((i+1))}"
done

# Print the final flag if no exact match was found
echo "$flag"